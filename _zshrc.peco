# vim: ft=sh

#---------------------------------------------------------------------------------
# agで見つかったpecoで選択してその行をvimで開く
function agvim () {
    \vim $(ag $@ | peco --query "$LBUFFER" | awk -F : '{print "+" $2 " " $1}')
}

#---------------------------------------------------------------------------------
# コマンド履歴をpecoで検索して表示
function peco-select-history() {
    local tac
    if which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    BUFFER=$(history -n 1 | eval $tac | awk '!a[$0]++' | peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history

#---------------------------------------------------------------------------------
# cd履歴をpecoで検索して表示
function peco-go-to-dir () {
  local line
  local selected="$(
    {
      (
        autoload -Uz chpwd_recent_filehandler
        chpwd_recent_filehandler && for line in $reply; do
          if [[ -d "$line" ]]; then
            echo "$line"
          fi
        done
      )
      ghq list --full-path
      for line in *(-/) ${^cdpath}/*(N-/); do echo "$line"; done | sort -u
    } | peco --query "$LBUFFER"
  )"
  if [ -n "$selected" ]; then
    BUFFER="cd ${(q)selected}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-go-to-dir
bindkey '^[g' peco-go-to-dir


#---------------------------------------------------------------------------------
# pecoで選んだプロセスをキルする
function kill-peco () {
    ps aux | peco | awk '{ print $2 }' | xargs kill -9
}

case "${OSTYPE}" in
darwin*)
    [ -f ~/dotfiles/_zshrc_peco.osx ] && source ~/dotfiles/_zshrc_peco.osx
    ;;
linux*)
    [ -f ~/dotfiles/_zshrc_peco.linux ] && source ~/dotfiles/_zshrc_peco.linux
    ;;
esac

#---------------------------------------------------------------------------------
# pecoで選んだものをgit add
function peco-select-gitadd() {
    local SELECTED_FILE_TO_ADD="$(git status --porcelain | \
                                  peco --query "$LBUFFER" | \
                                  awk -v path=$(git rev-parse --show-toplevel)/ -F ' ' '{print path $NF}')"
    if [ -n "$SELECTED_FILE_TO_ADD" ]; then
      BUFFER="git add $(echo "$SELECTED_FILE_TO_ADD" | tr '\n' ' ')"
      CURSOR=$#BUFFER
    fi
    zle accept-line
    # zle clear-screen
}
zle -N peco-select-gitadd
bindkey "^g^a" peco-select-gitadd

