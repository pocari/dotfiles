" ~/.dein_github_update_token に githubのpersonal tokenを設定しておく
fun! GetFileLine(fn, ln)
  return readfile(a:fn,'',a:ln)[a:ln-1]
endfun

let g:dein#install_github_api_token = ""
let s:token_file = expand('~/.dein_github_update_token')
if filereadable(s:token_file)
  let g:dein#install_github_api_token = GetFileLine(s:token_file, 1)
endif

"if g:dein#install_github_api_token != ""
"  echo 'token exists'
"else
"  echo 'token not exits'
"endif

" プラグインが実際にインストールされるディレクトリ
let s:dein_dir = expand('~/.cache/dein')
" dein.vim 本体
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'

" dein.vim がなければ github から落としてくる
if &runtimepath !~# '/dein.vim'
  if !isdirectory(s:dein_repo_dir)
    execute '!git clone https://github.com/Shougo/dein.vim' s:dein_repo_dir
  endif
  execute 'set runtimepath^=' . fnamemodify(s:dein_repo_dir, ':p')
endif

" 設定開始
if dein#load_state(s:dein_dir)
  " プラグインリストを収めた TOML ファイル
  let s:toml      = '~/.vim/rc/dein.toml'
  let s:lazy_toml = '~/.vim/rc/dein_lazy.toml'

  call dein#begin(s:dein_dir)

  " TOML を読み込み、キャッシュしておく
  call dein#load_toml(s:toml,      {'lazy': 0})
  call dein#load_toml(s:lazy_toml, {'lazy': 1})

  " 設定終了
  call dein#end()
  call dein#save_state()
endif

"  " もし、未インストールものものがあったらインストール
"  if dein#check_install()
"    call dein#install()
"  endif
let s:script_name = expand('<sfile>:p')
function! DeinCheckAndInstall() abort
  if dein#check_install()
    call dein#install()
  else
    echohl WarningMsg | echom "[" . s:script_name . "] All plugins are installed.(But update check is not done yet)" | echohl None
  endif
endfunction

