if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

" add lugins
NeoBundle 'Shougo/vimfiler'
NeoBundle 'Shougo/unite.vim'
NeoBundle 'Shougo/neomru.vim'

if !has("win32")
  NeoBundle 'Shougo/vimproc', {
        \ 'build' : {
            \ 'windows' : 'make -f make_mingw32.mak',
                \ 'cygwin' : 'make -f make_cygwin.mak',
                \ 'mac' : 'make -f make_mac.mak',
                \ 'unix' : 'make -f make_unix.mak',
                \ },
            \ }
endif

NeoBundle 'thinca/vim-quickrun'

NeoBundle 'Shougo/neocomplete'

NeoBundle 'Shougo/vimshell'

NeoBundle 'tpope/vim-endwise'

NeoBundle 'itchyny/lightline.vim'

NeoBundle 'tpope/vim-fugitive'

NeoBundle 'airblade/vim-gitgutter'

NeoBundle 'tpope/vim-surround'

NeoBundle 'kchmck/vim-coffee-script'

NeoBundle 'Yggdroot/indentLine'

NeoBundle 'kana/vim-fakeclip'

NeoBundle 'joonty/vdebug'

NeoBundle 'tacroe/unite-mark'

NeoBundle 'yonchu/accelerated-smooth-scroll'

NeoBundle 'BufOnly.vim'

NeoBundle 'tpope/vim-dispatch'

NeoBundle 'vim-jp/vimdoc-ja'

NeoBundle "thinca/vim-qfreplace"

NeoBundle 'vim-scripts/gtags.vim'

NeoBundle 'elzr/vim-json'

NeoBundle 'zenorocha/dracula-theme', {'rtp': 'vim/'}

if has("mac")
  NeoBundleLazy 'nosami/Omnisharp', {
  \   'autoload': {'filetypes': ['cs']},
  \   'build': {
  \     'windows': 'MSBuild.exe server/OmniSharp.sln /p:Platform="Any CPU"',
  \     'mac': 'xbuild server/OmniSharp.sln',
  \     'unix': 'xbuild server/OmniSharp.sln',
  \   }
  \ }

  NeoBundle 'kovisoft/slimv'

  NeoBundle 'toyamarinyon/vim-swift'
endif

filetype plugin on

call neobundle#end()

NeoBundleCheck
